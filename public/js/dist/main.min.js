!function(){"use strict";var t=angular.module("app",["ngRoute","ngDialog","controllers","services","filters","directives"]);t.config(function(t){t.when("/",{templateUrl:"js/app/templates/restaurants.html",controller:"restaurantsController",controllerAs:"vm",resolve:{data:function(t){return t.getRestaurants()},data2:function(t){return t.orderService.orderRestaurants}}}).when("/restaurant/:id",{templateUrl:"js/app/templates/restaurantDetails.html",controller:"restaurantDetailsController",controllerAs:"vm",resolve:{data:["$route","restaurantsService",function(t,r){return r.getRestaurantDetails(t.current.params.id)}]}}).when("/payment",{templateUrl:"js/app/templates/payment.html",controller:"paymentController",controllerAs:"vm"}).when("/confirmation",{templateUrl:"js/app/templates/confirmation.html"}).otherwise({template:'<p>Error finding route</p><a href="#/"><< Back to Restaurants List</a>'})})}(),function(){"use strict";var t=angular.module("controllers",[]);t.controller("restaurantsController",["data","data2","restaurantsService","$location",function(t,r,e,n){this.restaurants=t,this.orderRestaurants=r,this.updateServiceOrders=function(t){e.orderService.setOrderRestaurants(t)},this.isChecked=function(t){for(var r=!1,e=0;e<this.orderRestaurants.length;e++)this.orderRestaurants[e]._id==t&&(r=!0);return r},this.addRestaurant=function(t){var r=this.containsObject(t,this.orderRestaurants);return r>-1?(this.orderRestaurants.splice(r,1),void this.updateServiceOrders(this.orderRestaurants)):(this.orderRestaurants.push(t),void this.updateServiceOrders(this.orderRestaurants))},this.saveOrder=function(){e.createOrder(this.orderRestaurants).then(function(t){return t.success?void n.url("/payment"):void alert("Something went wrong saving the order...")})},this.containsObject=function(t,r){var e=0;for(e=0;e<r.length;e++)if(r[e]===t)return e;return e=-1}}]),t.controller("restaurantDetailsController",["data","ngDialog","$scope",function(t,r,e){this.restDetails=t,this.viewItem=function(t){this.activeItem=t,r.open({template:"item.html",className:"ngdialog-theme-default",scope:e}),console.log("item: "+this.activeItem)}}]),t.controller("paymentController",["$location",function(t){this.submit=function(){this.showProgress=!0,t.url("/confirmation")}}])}(),function(){"use strict";var t=angular.module("directives",[]);t.directive("creditCard",function(){return{require:"ngModel",link:function(t,r,e,n){n.$validators.creditCard=function(t,r){if(!r)return!0;for(var e=r.length,n=0,a=[[0,1,2,3,4,5,6,7,8,9],[0,2,4,6,8,1,3,5,7,9]],s=0;e--;)s+=a[n][parseInt(r.charAt(e),10)],n^=1;return s%10===0&&s>0}}}})}(),function(){"use strict";var t=angular.module("filters",[]);t.filter("capitalize",function(){return function(t,r){return null!==t&&(t=t.toLowerCase()),t.substring(0,1).toUpperCase()+t.substring(1)}})}(),function(){"use strict";var t=angular.module("services",[]);t.factory("restaurantsService",["$http","$location",function(t,r){var e={};return e.orderRestaurants=[],e.setOrderRestaurants=function(t){this.orderRestaurants=t,console.log("orderService set %o",e.orderRestaurants)},{orderService:e,getRestaurants:function(){return t.get("/orders/restaurants").then(function(t){return t.data},function(t){console.log(t+"Service - Error finding restaurants list"),r.url("/error")})},getRestaurantDetails:function(e){return t.get("/orders/restaurants/"+e).then(function(t){return t.data},function(t){console.log(t+"Service - Error finding restaurant details"),r.url("/error")})},createOrder:function(r){return t.post("/orders/create-order",r).then(function(t){return t.data},function(t){return console.log("Service - Error creating order, %o",t),t})}}}])}();